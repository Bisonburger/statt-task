[{"M:\\Projects\\statt-task\\frontend\\src\\index.tsx":"1","M:\\Projects\\statt-task\\frontend\\src\\reportWebVitals.ts":"2","M:\\Projects\\statt-task\\frontend\\src\\App.tsx":"3","M:\\Projects\\statt-task\\frontend\\src\\pages\\Main.tsx":"4","M:\\Projects\\statt-task\\frontend\\src\\model\\task.ts":"5","M:\\Projects\\statt-task\\frontend\\src\\components\\TaskView.tsx":"6","M:\\Projects\\statt-task\\frontend\\src\\components\\TaskEdit.tsx":"7","M:\\Projects\\statt-task\\frontend\\src\\components\\TaskAdd.tsx":"8","M:\\Projects\\statt-task\\frontend\\src\\components\\TaskDelete.tsx":"9"},{"size":457,"mtime":1610901582670,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"12","hashOfConfig":"11"},{"size":134,"mtime":1610741881178,"results":"13","hashOfConfig":"11"},{"size":1213,"mtime":1610912162325,"results":"14","hashOfConfig":"11"},{"size":437,"mtime":1610912637921,"results":"15","hashOfConfig":"11"},{"size":723,"mtime":1610913357353,"results":"16","hashOfConfig":"11"},{"size":2148,"mtime":1610914918509,"results":"17","hashOfConfig":"11"},{"size":2060,"mtime":1610913192595,"results":"18","hashOfConfig":"11"},{"size":1391,"mtime":1610913390488,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1e6ctj6",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},"M:\\Projects\\statt-task\\frontend\\src\\index.tsx",[],["42","43"],"M:\\Projects\\statt-task\\frontend\\src\\reportWebVitals.ts",[],"M:\\Projects\\statt-task\\frontend\\src\\App.tsx",[],"M:\\Projects\\statt-task\\frontend\\src\\pages\\Main.tsx",["44"],"import * as React from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Card from 'react-bootstrap/Card'\r\nimport ListGroup from 'react-bootstrap/esm/ListGroup';\r\nimport { TaskView } from '../components/TaskView'\r\nimport { TaskAdd } from '../components/TaskAdd'\r\nimport { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nexport const Main = () => {\r\n\r\n  const [ tasks,  setTasks ] = useState( [] );\r\n\r\n  var isUpdate = false;\r\n\r\n  useEffect(() => {\r\n    update()\r\n  }, [isUpdate] );\r\n\r\n  const update = () => { \r\n    axios.get( \"http://localhost:8080/task\")\r\n      .then( (response) => setTasks( response.data ) ) \r\n    isUpdate = true;  \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">\r\n          Statt Tasks\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n      <Card >\r\n        <Card.Header>Tasks</Card.Header>\r\n        <ListGroup variant=\"flush\">\r\n          {tasks.map(task =>\r\n            <ListGroup.Item><TaskView task={task} update={update}></TaskView></ListGroup.Item>)}\r\n        </ListGroup>\r\n        <Card.Footer>\r\n            <TaskAdd update={update}></TaskAdd>\r\n        </Card.Footer>\r\n      </Card>\r\n    </>\r\n  )\r\n}","M:\\Projects\\statt-task\\frontend\\src\\model\\task.ts",[],"M:\\Projects\\statt-task\\frontend\\src\\components\\TaskView.tsx",["45"],"import { Task } from \"../model/task\";\r\nimport React from \"react\";\r\nimport Button from \"react-bootstrap/esm/Button\";\r\nimport { Col, Row, Container } from \"react-bootstrap\";\r\nimport { TaskEdit } from \"./TaskEdit\";\r\nimport { TaskDelete } from \"./TaskDelete\"\r\n\r\nexport const TaskView = (props: { task: Task, update: () => void }) => {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Row>\r\n          <Col>{props.task.summary}</Col>\r\n          <Col>\r\n            <span>\r\n              <TaskEdit task={props.task} update={props.update}></TaskEdit>{' '}\r\n              <TaskDelete task={props.task} update={props.update}></TaskDelete>\r\n            </span>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","M:\\Projects\\statt-task\\frontend\\src\\components\\TaskEdit.tsx",[],"M:\\Projects\\statt-task\\frontend\\src\\components\\TaskAdd.tsx",[],"M:\\Projects\\statt-task\\frontend\\src\\components\\TaskDelete.tsx",["46","47","48"],"import { Props, useState } from \"react\";\r\nimport { CreateTaskDto, Task } from \"../model/task\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport axios from \"axios\";\r\n\r\ntype voidFunction = () => void;\r\n\r\nexport const TaskDelete = (props: { task: Task, update: voidFunction }) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = async () => {\r\n    setShow(false);\r\n    await axios.delete( `http://localhost:8080/task/${task.id}`)\r\n    props.update();\r\n  }\r\n  const handleCloseImmediate = () => {\r\n    setShow(false);\r\n  }\r\n  const handleShow = () => {\r\n    setShow(true);\r\n  }\r\n\r\n  var task = props.task\r\n\r\n  return (\r\n    <>\r\n      <Button size=\"sm\" variant=\"danger\" onClick={handleShow}>\r\n        Delete\r\n      </Button>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Task Delete</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n            Are you sure you want to delete the task?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseImmediate}>\r\n            No\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleClose}>\r\n            Yes - Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":19,"column":6,"nodeType":"55","endLine":19,"endColumn":16,"suggestions":"56"},{"ruleId":"57","severity":1,"message":"58","line":3,"column":8,"nodeType":"59","messageId":"60","endLine":3,"endColumn":14},{"ruleId":"57","severity":1,"message":"61","line":1,"column":10,"nodeType":"59","messageId":"60","endLine":1,"endColumn":15},{"ruleId":"57","severity":1,"message":"62","line":2,"column":10,"nodeType":"59","messageId":"60","endLine":2,"endColumn":23},{"ruleId":"57","severity":1,"message":"63","line":5,"column":8,"nodeType":"59","messageId":"60","endLine":5,"endColumn":12},"no-native-reassign",["64"],"no-negated-in-lhs",["65"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'update'. Either include it or remove the dependency array.","ArrayExpression",["66"],"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Props' is defined but never used.","'CreateTaskDto' is defined but never used.","'Form' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},"Update the dependencies array to be: [isUpdate, update]",{"range":"69","text":"70"},[501,511],"[isUpdate, update]"]